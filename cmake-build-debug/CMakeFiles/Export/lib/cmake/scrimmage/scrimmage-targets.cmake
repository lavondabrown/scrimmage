# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget scrimmage-msgs scrimmage scrimmage-protos ArduPilot_plugin AuctionAssign_plugin AvoidEntityMS_plugin AvoidWalls_plugin Boids_plugin Control3D_plugin ExternalControl_plugin MotorSchemas_plugin MoveToGoalMS_plugin MultirotorTests_plugin Predator_plugin PyAutonomy_plugin QuadTest_plugin Straight_plugin TrajectoryRecordPlayback_plugin TutorialOpenAIAutonomy_plugin WaypointFollower_plugin WaypointGenerator_plugin follow_plugin ContactBlobCamera_plugin NoisyContacts_plugin NoisyState_plugin RayTrace_plugin RigidBody6DOFStateSensor_plugin SimpleCamera_plugin TutorialOpenAISensor_plugin DoubleIntegrator_plugin FixedWing6DOF_plugin JSBSimControl_plugin JSBSimModel_plugin Multirotor_plugin RigidBody6DOF_plugin SimpleAircraft_plugin SimpleCar_plugin SimpleQuadrotor_plugin SingleIntegrator_plugin UUV6DOF_plugin Unicycle_plugin Unicycle3D_plugin AircraftToSingleIntegratorController_plugin DoubleIntegratorControllerDirect_plugin DoubleIntegratorControllerVelYaw_plugin DoubleIntegratorControllerWaypoint_plugin FixedWing6DOFControllerPID_plugin JSBSimControlControllerDirect_plugin JSBSimControlControllerHeadingPID_plugin JSBSimModelControllerDirect_plugin JSBSimModelControllerHeadingPID_plugin JoystickController_plugin MultirotorControllerOmega_plugin MultirotorControllerPID_plugin RigidBody6DOFControllerPID_plugin SimpleAircraftControllerPID_plugin SimpleCarControllerHeading_plugin SimpleQuadrotorControllerLQR_plugin SingleIntegratorControllerSimple_plugin SingleIntegratorControllerWaypoint_plugin Unicycle3DControllerDirect_plugin Unicycle3DControllerPID_plugin UnicycleControllerDirect_plugin UnicycleControllerPoint_plugin SimpleCaptureMetrics_plugin SimpleCollisionMetrics_plugin Boundary_plugin BulletCollision_plugin GroundCollision_plugin MapGen2D_plugin SimpleCapture_plugin SimpleCollision_plugin GlobalNetwork_plugin LocalNetwork_plugin SphereNetwork_plugin scrimmage-viewer)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target scrimmage-msgs
add_library(scrimmage-msgs SHARED IMPORTED)

set_target_properties(scrimmage-msgs PROPERTIES
  INTERFACE_LINK_LIBRARIES "/opt/scrimmage/lib/libprotobuf.so;-lpthread"
)

# Create imported target scrimmage
add_library(scrimmage SHARED IMPORTED)

set_target_properties(scrimmage PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage-protos;/usr/lib/x86_64-linux-gnu/libpython2.7.so;/usr/lib/x86_64-linux-gnu/libboost_thread.so;/usr/lib/x86_64-linux-gnu/libboost_date_time.so;/usr/lib/x86_64-linux-gnu/libboost_iostreams.so;/usr/lib/x86_64-linux-gnu/libboost_program_options.so;/usr/lib/x86_64-linux-gnu/libboost_regex.so;/usr/lib/x86_64-linux-gnu/libboost_filesystem.so;/usr/lib/x86_64-linux-gnu/libboost_system.so;/usr/lib/x86_64-linux-gnu/libboost_chrono.so;/usr/lib/x86_64-linux-gnu/libboost_atomic.so;/usr/lib/x86_64-linux-gnu/libGeographic.so;scrimmage-msgs;dl"
)

# Create imported target scrimmage-protos
add_library(scrimmage-protos SHARED IMPORTED)

set_target_properties(scrimmage-protos PROPERTIES
  INTERFACE_LINK_LIBRARIES "/opt/scrimmage/lib/libprotobuf.so;-lpthread;/opt/scrimmage/lib/libgrpc++.so;/opt/scrimmage/lib/libgrpc.so;/opt/scrimmage/lib/libgpr.so"
)

# Create imported target ArduPilot_plugin
add_library(ArduPilot_plugin SHARED IMPORTED)

set_target_properties(ArduPilot_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "Multirotor_plugin"
)

# Create imported target AuctionAssign_plugin
add_library(AuctionAssign_plugin SHARED IMPORTED)

set_target_properties(AuctionAssign_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage-msgs"
)

# Create imported target AvoidEntityMS_plugin
add_library(AvoidEntityMS_plugin SHARED IMPORTED)

# Create imported target AvoidWalls_plugin
add_library(AvoidWalls_plugin SHARED IMPORTED)

# Create imported target Boids_plugin
add_library(Boids_plugin SHARED IMPORTED)

# Create imported target Control3D_plugin
add_library(Control3D_plugin SHARED IMPORTED)

# Create imported target ExternalControl_plugin
add_library(ExternalControl_plugin SHARED IMPORTED)

# Create imported target MotorSchemas_plugin
add_library(MotorSchemas_plugin SHARED IMPORTED)

# Create imported target MoveToGoalMS_plugin
add_library(MoveToGoalMS_plugin SHARED IMPORTED)

# Create imported target MultirotorTests_plugin
add_library(MultirotorTests_plugin SHARED IMPORTED)

set_target_properties(MultirotorTests_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "Multirotor_plugin"
)

# Create imported target Predator_plugin
add_library(Predator_plugin SHARED IMPORTED)

# Create imported target PyAutonomy_plugin
add_library(PyAutonomy_plugin SHARED IMPORTED)

set_target_properties(PyAutonomy_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libboost_thread.so;/usr/lib/x86_64-linux-gnu/libboost_date_time.so;/usr/lib/x86_64-linux-gnu/libboost_iostreams.so;/usr/lib/x86_64-linux-gnu/libboost_program_options.so;/usr/lib/x86_64-linux-gnu/libboost_regex.so;/usr/lib/x86_64-linux-gnu/libboost_filesystem.so;/usr/lib/x86_64-linux-gnu/libboost_system.so;/usr/lib/x86_64-linux-gnu/libboost_chrono.so;/usr/lib/x86_64-linux-gnu/libboost_atomic.so;/usr/lib/x86_64-linux-gnu/libpython2.7.so"
)

# Create imported target QuadTest_plugin
add_library(QuadTest_plugin SHARED IMPORTED)

# Create imported target Straight_plugin
add_library(Straight_plugin SHARED IMPORTED)

set_target_properties(Straight_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "opencv_calib3d;opencv_core;opencv_dnn;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_objdetect;opencv_photo;opencv_shape;opencv_stitching;opencv_superres;opencv_video;opencv_videoio;opencv_videostab;opencv_viz;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_ccalib;opencv_cvv;opencv_datasets;opencv_dpm;opencv_face;opencv_fuzzy;opencv_hdf;opencv_img_hash;opencv_line_descriptor;opencv_optflow;opencv_phase_unwrapping;opencv_plot;opencv_reg;opencv_rgbd;opencv_saliency;opencv_stereo;opencv_structured_light;opencv_surface_matching;opencv_text;opencv_tracking;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto;Boundary_plugin"
)

# Create imported target TrajectoryRecordPlayback_plugin
add_library(TrajectoryRecordPlayback_plugin SHARED IMPORTED)

# Create imported target TutorialOpenAIAutonomy_plugin
add_library(TutorialOpenAIAutonomy_plugin SHARED IMPORTED)

set_target_properties(TutorialOpenAIAutonomy_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "ExternalControl_plugin"
)

# Create imported target WaypointFollower_plugin
add_library(WaypointFollower_plugin SHARED IMPORTED)

set_target_properties(WaypointFollower_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "WaypointGenerator_plugin"
)

# Create imported target WaypointGenerator_plugin
add_library(WaypointGenerator_plugin SHARED IMPORTED)

# Create imported target follow_plugin
add_library(follow_plugin SHARED IMPORTED)

# Create imported target ContactBlobCamera_plugin
add_library(ContactBlobCamera_plugin SHARED IMPORTED)

set_target_properties(ContactBlobCamera_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "opencv_calib3d;opencv_core;opencv_dnn;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_objdetect;opencv_photo;opencv_shape;opencv_stitching;opencv_superres;opencv_video;opencv_videoio;opencv_videostab;opencv_viz;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_ccalib;opencv_cvv;opencv_datasets;opencv_dpm;opencv_face;opencv_fuzzy;opencv_hdf;opencv_img_hash;opencv_line_descriptor;opencv_optflow;opencv_phase_unwrapping;opencv_plot;opencv_reg;opencv_rgbd;opencv_saliency;opencv_stereo;opencv_structured_light;opencv_surface_matching;opencv_text;opencv_tracking;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto"
)

# Create imported target NoisyContacts_plugin
add_library(NoisyContacts_plugin SHARED IMPORTED)

# Create imported target NoisyState_plugin
add_library(NoisyState_plugin SHARED IMPORTED)

# Create imported target RayTrace_plugin
add_library(RayTrace_plugin SHARED IMPORTED)

# Create imported target RigidBody6DOFStateSensor_plugin
add_library(RigidBody6DOFStateSensor_plugin SHARED IMPORTED)

set_target_properties(RigidBody6DOFStateSensor_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "Multirotor_plugin"
)

# Create imported target SimpleCamera_plugin
add_library(SimpleCamera_plugin SHARED IMPORTED)

# Create imported target TutorialOpenAISensor_plugin
add_library(TutorialOpenAISensor_plugin SHARED IMPORTED)

# Create imported target DoubleIntegrator_plugin
add_library(DoubleIntegrator_plugin SHARED IMPORTED)

# Create imported target FixedWing6DOF_plugin
add_library(FixedWing6DOF_plugin SHARED IMPORTED)

# Create imported target JSBSimControl_plugin
add_library(JSBSimControl_plugin SHARED IMPORTED)

set_target_properties(JSBSimControl_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "/opt/scrimmage/lib/libJSBSim.so;/opt/scrimmage/lib/libJSBSim.so"
)

# Create imported target JSBSimModel_plugin
add_library(JSBSimModel_plugin SHARED IMPORTED)

set_target_properties(JSBSimModel_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "/opt/scrimmage/lib/libJSBSim.so;/opt/scrimmage/lib/libJSBSim.so"
)

# Create imported target Multirotor_plugin
add_library(Multirotor_plugin SHARED IMPORTED)

# Create imported target RigidBody6DOF_plugin
add_library(RigidBody6DOF_plugin SHARED IMPORTED)

# Create imported target SimpleAircraft_plugin
add_library(SimpleAircraft_plugin SHARED IMPORTED)

# Create imported target SimpleCar_plugin
add_library(SimpleCar_plugin SHARED IMPORTED)

# Create imported target SimpleQuadrotor_plugin
add_library(SimpleQuadrotor_plugin SHARED IMPORTED)

# Create imported target SingleIntegrator_plugin
add_library(SingleIntegrator_plugin SHARED IMPORTED)

# Create imported target UUV6DOF_plugin
add_library(UUV6DOF_plugin SHARED IMPORTED)

# Create imported target Unicycle_plugin
add_library(Unicycle_plugin SHARED IMPORTED)

# Create imported target Unicycle3D_plugin
add_library(Unicycle3D_plugin SHARED IMPORTED)

# Create imported target AircraftToSingleIntegratorController_plugin
add_library(AircraftToSingleIntegratorController_plugin SHARED IMPORTED)

# Create imported target DoubleIntegratorControllerDirect_plugin
add_library(DoubleIntegratorControllerDirect_plugin SHARED IMPORTED)

# Create imported target DoubleIntegratorControllerVelYaw_plugin
add_library(DoubleIntegratorControllerVelYaw_plugin SHARED IMPORTED)

# Create imported target DoubleIntegratorControllerWaypoint_plugin
add_library(DoubleIntegratorControllerWaypoint_plugin SHARED IMPORTED)

# Create imported target FixedWing6DOFControllerPID_plugin
add_library(FixedWing6DOFControllerPID_plugin SHARED IMPORTED)

# Create imported target JSBSimControlControllerDirect_plugin
add_library(JSBSimControlControllerDirect_plugin SHARED IMPORTED)

# Create imported target JSBSimControlControllerHeadingPID_plugin
add_library(JSBSimControlControllerHeadingPID_plugin SHARED IMPORTED)

# Create imported target JSBSimModelControllerDirect_plugin
add_library(JSBSimModelControllerDirect_plugin SHARED IMPORTED)

# Create imported target JSBSimModelControllerHeadingPID_plugin
add_library(JSBSimModelControllerHeadingPID_plugin SHARED IMPORTED)

# Create imported target JoystickController_plugin
add_library(JoystickController_plugin SHARED IMPORTED)

# Create imported target MultirotorControllerOmega_plugin
add_library(MultirotorControllerOmega_plugin SHARED IMPORTED)

set_target_properties(MultirotorControllerOmega_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "Multirotor_plugin"
)

# Create imported target MultirotorControllerPID_plugin
add_library(MultirotorControllerPID_plugin SHARED IMPORTED)

set_target_properties(MultirotorControllerPID_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "Multirotor_plugin"
)

# Create imported target RigidBody6DOFControllerPID_plugin
add_library(RigidBody6DOFControllerPID_plugin SHARED IMPORTED)

# Create imported target SimpleAircraftControllerPID_plugin
add_library(SimpleAircraftControllerPID_plugin SHARED IMPORTED)

# Create imported target SimpleCarControllerHeading_plugin
add_library(SimpleCarControllerHeading_plugin SHARED IMPORTED)

# Create imported target SimpleQuadrotorControllerLQR_plugin
add_library(SimpleQuadrotorControllerLQR_plugin SHARED IMPORTED)

# Create imported target SingleIntegratorControllerSimple_plugin
add_library(SingleIntegratorControllerSimple_plugin SHARED IMPORTED)

# Create imported target SingleIntegratorControllerWaypoint_plugin
add_library(SingleIntegratorControllerWaypoint_plugin SHARED IMPORTED)

# Create imported target Unicycle3DControllerDirect_plugin
add_library(Unicycle3DControllerDirect_plugin SHARED IMPORTED)

# Create imported target Unicycle3DControllerPID_plugin
add_library(Unicycle3DControllerPID_plugin SHARED IMPORTED)

# Create imported target UnicycleControllerDirect_plugin
add_library(UnicycleControllerDirect_plugin SHARED IMPORTED)

# Create imported target UnicycleControllerPoint_plugin
add_library(UnicycleControllerPoint_plugin SHARED IMPORTED)

# Create imported target SimpleCaptureMetrics_plugin
add_library(SimpleCaptureMetrics_plugin SHARED IMPORTED)

# Create imported target SimpleCollisionMetrics_plugin
add_library(SimpleCollisionMetrics_plugin SHARED IMPORTED)

set_target_properties(SimpleCollisionMetrics_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage-msgs"
)

# Create imported target Boundary_plugin
add_library(Boundary_plugin SHARED IMPORTED)

# Create imported target BulletCollision_plugin
add_library(BulletCollision_plugin SHARED IMPORTED)

set_target_properties(BulletCollision_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage-msgs;RayTrace_plugin;/usr/lib/x86_64-linux-gnu/libBulletDynamics.so;/usr/lib/x86_64-linux-gnu/libBulletCollision.so;/usr/lib/x86_64-linux-gnu/libLinearMath.so;/usr/lib/x86_64-linux-gnu/libBulletSoftBody.so"
)

# Create imported target GroundCollision_plugin
add_library(GroundCollision_plugin SHARED IMPORTED)

set_target_properties(GroundCollision_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage-msgs"
)

# Create imported target MapGen2D_plugin
add_library(MapGen2D_plugin SHARED IMPORTED)

set_target_properties(MapGen2D_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "opencv_calib3d;opencv_core;opencv_dnn;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_objdetect;opencv_photo;opencv_shape;opencv_stitching;opencv_superres;opencv_video;opencv_videoio;opencv_videostab;opencv_viz;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_ccalib;opencv_cvv;opencv_datasets;opencv_dpm;opencv_face;opencv_fuzzy;opencv_hdf;opencv_img_hash;opencv_line_descriptor;opencv_optflow;opencv_phase_unwrapping;opencv_plot;opencv_reg;opencv_rgbd;opencv_saliency;opencv_stereo;opencv_structured_light;opencv_surface_matching;opencv_text;opencv_tracking;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto"
)

# Create imported target SimpleCapture_plugin
add_library(SimpleCapture_plugin SHARED IMPORTED)

# Create imported target SimpleCollision_plugin
add_library(SimpleCollision_plugin SHARED IMPORTED)

set_target_properties(SimpleCollision_plugin PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage;scrimmage-msgs"
)

# Create imported target GlobalNetwork_plugin
add_library(GlobalNetwork_plugin SHARED IMPORTED)

# Create imported target LocalNetwork_plugin
add_library(LocalNetwork_plugin SHARED IMPORTED)

# Create imported target SphereNetwork_plugin
add_library(SphereNetwork_plugin SHARED IMPORTED)

# Create imported target scrimmage-viewer
add_library(scrimmage-viewer SHARED IMPORTED)

set_target_properties(scrimmage-viewer PROPERTIES
  INTERFACE_LINK_LIBRARIES "scrimmage;scrimmage-protos;vtkFiltersSources;vtkCommonComputationalGeometry;vtkCommonDataModel;vtkCommonMath;vtkCommonCore;vtksys;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkFiltersGeneral;vtkFiltersCore;vtkCommonExecutionModel;vtkFiltersTexture;vtkInteractionStyle;vtkFiltersExtraction;vtkFiltersStatistics;vtkImagingFourier;vtkImagingCore;vtkalglib;vtkRenderingCore;vtkCommonColor;vtkFiltersGeometry;vtkIOGeometry;vtkIOCore;/usr/lib/x86_64-linux-gnu/libz.so;/usr/lib/x86_64-linux-gnu/libjsoncpp.so;vtkIOImage;vtkDICOMParser;vtkmetaio;/usr/lib/x86_64-linux-gnu/libjpeg.so;/usr/lib/x86_64-linux-gnu/libpng.so;/usr/lib/x86_64-linux-gnu/libtiff.so;vtkIOLegacy;vtkRenderingAnnotation;vtkImagingColor;vtkRenderingFreeType;/usr/lib/x86_64-linux-gnu/libfreetype.so;vtkftgl;vtkRenderingOpenGL;vtkImagingHybrid"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/scrimmage-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
